import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:http/http.dart' as http;
import 'dart:io';

class FileUploadScreen extends StatefulWidget {
  @override
  _FileUploadScreenState createState() => _FileUploadScreenState();
}

class _FileUploadScreenState extends State<FileUploadScreen> {
  final ImagePicker _picker = ImagePicker();
  XFile? _image; // Store the picked file
  bool _isUploading = false;

  // Function to pick a file
  Future<void> _pickFile() async {
    final XFile? pickedFile = await _picker.pickImage(source: ImageSource.gallery); // Pick image from gallery
    if (pickedFile != null) {
      setState(() {
        _image = pickedFile;
      });
    }
  }

  // Function to upload the file
  Future<void> _uploadFile() async {
    if (_image == null) return;

    setState(() {
      _isUploading = true;
    });

    try {
      // Replace with your API URL
      final Uri url = Uri.parse('https://example.com/upload');

      // Create a Multipart request
      var request = http.MultipartRequest('POST', url);

      // Attach the file
      var file = await http.MultipartFile.fromPath('file', _image!.path);
      request.files.add(file);

      // Send the request
      var response = await request.send();

      if (response.statusCode == 200) {
        print('File uploaded successfully');
        // Handle success
      } else {
        print('File upload failed');
        // Handle failure
      }
    } catch (e) {
      print('Error: $e');
      // Handle error
    } finally {
      setState(() {
        _isUploading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Upload File"),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            if (_image != null) 
              Image.file(File(_image!.path), width: 200, height: 200),
            if (_image == null) 
              Text("No file selected"),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _pickFile,
              child: Text("Pick File"),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _isUploading ? null : _uploadFile,
              child: _isUploading ? CircularProgressIndicator() : Text("Upload File"),
            ),
          ],
        ),
      ),
    );
  }
}